{"version":3,"sources":["components/block/Block.js","components/grren/Green.js","components/Display/Display.js","App.js","index.js","components/block/Block.module.css","components/grren/Green.module.css","components/Display/Display.module.css"],"names":["Block","props","useState","backColor","setBackColor","isFlipped","setIsflipped","color","divClassName","classes","displayDiv","selectedIds","length","array","shakeDisplayDiv","onClick","selectDiv","id","className","container","flipDirection","style","background","children","Green","useEffect","setTimeout","Display","arr","i","push","colorArr","setColorArray","setSelectedIds","prevState","displayArr","display","content","App","j","Math","floor","random","temp","shuffle","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.2e232303.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport ReactCardFlip from \"react-card-flip\";\r\nimport classes from \"./Block.module.css\";\r\n\r\nconst Block = (props) => {\r\n  const [backColor, setBackColor] = useState(\"white\");\r\n  const [isFlipped, setIsflipped] = useState(false);\r\n\r\n  if (props.color === 1 && backColor !== \"white\") {\r\n    setBackColor(\"white\");\r\n  }\r\n  if (props.color === 2 && backColor !== \"#87CEEB\") {\r\n    setBackColor(\"#87CEEB\");\r\n  }\r\n\r\n  if (props.color === 1 && isFlipped !== false) {\r\n    setIsflipped(false);\r\n  }\r\n  if (props.color === 2 && isFlipped !== true) {\r\n    setIsflipped(true);\r\n  }\r\n  let divClassName= classes.displayDiv;\r\n  if (props.selectedIds.length === 2 && props.color === 2) {\r\n    if (\r\n      props.array[props.selectedIds[0]] !== props.array[props.selectedIds[1]]\r\n    ) {\r\n      divClassName = classes.shakeDisplayDiv;\r\n    }\r\n  }\r\n  \r\n  const selectDivHandler = () => {\r\n    props.selectDiv(props.id);\r\n  };\r\n\r\n  return (\r\n    <div onClick={selectDivHandler} className={classes.container}>\r\n      <ReactCardFlip isFlipped={isFlipped} flipDirection=\"horizontal\">\r\n        <div\r\n          className={classes.displayDiv}\r\n          style={{ background: backColor }}\r\n        ></div>\r\n        <div className={divClassName} \r\n          style={{ background: backColor}}>\r\n          {props.children}\r\n        </div>\r\n      </ReactCardFlip>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Block;\r\n","import classes from \"./Green.module.css\";\r\nimport ReactCardFlip from \"react-card-flip\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst Green = (props) => {\r\n    const [isFlipped, setIsflipped] =  useState(false);\r\n    useEffect(()=>{\r\n        setTimeout(()=>{\r\n            setIsflipped(true);\r\n        },200)\r\n    },[])\r\n  return (\r\n    <div className={classes.container} >\r\n      <ReactCardFlip isFlipped={isFlipped} flipDirection=\"horizontal\">\r\n      <div className={classes.displayDiv} style={{ background: \"#87CEEB\" }}>{props.children}</div>\r\n        <div className={classes.displayDiv} style={{ background: \"#e73060\" }}>{props.children}</div>\r\n      </ReactCardFlip>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Green;\r\n","import { useEffect, useState } from \"react\";\r\nimport Block from \"../block/Block\";\r\nimport Green from \"../grren/Green\";\r\nimport classes from \"./Display.module.css\";\r\n\r\nconst Display = (props) => {\r\n  const [colorArr, setColorArray] = useState(() => {\r\n    const arr = [];\r\n    for (let i = 0; i < props.array.length; i++) {\r\n      arr.push(1);\r\n    }\r\n    return arr;\r\n  });\r\n  const [selectedIds, setSelectedIds] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (selectedIds.length === 2) {\r\n      if (props.array[selectedIds[0]] === props.array[selectedIds[1]]) {\r\n        setTimeout(() => {\r\n          setColorArray((prevState) => {\r\n            prevState[selectedIds[0]] = 3;\r\n            prevState[selectedIds[1]] = 3;\r\n            return prevState;\r\n          });\r\n          setSelectedIds([]);\r\n        }, 500);\r\n      } else {\r\n        setTimeout(() => {\r\n          setColorArray((prevState) => {\r\n            prevState[selectedIds[0]] = 1;\r\n            prevState[selectedIds[1]] = 1;\r\n            return prevState;\r\n          });\r\n          setSelectedIds([]);\r\n        }, 1000);\r\n      }\r\n    }\r\n  }, [selectedIds, colorArr, props.array]);\r\n\r\n  const selectDiv = (id) => {\r\n    if (selectedIds.length === 2) {\r\n      return;\r\n    }\r\n    if (selectedIds.length === 0) {\r\n      setSelectedIds((prevState) => {\r\n        return [id];\r\n      });\r\n      setColorArray((prevState) => {\r\n        prevState[id] = 2;\r\n        return prevState;\r\n      });\r\n      return;\r\n    }\r\n    if (selectedIds[0] === id) {\r\n      setSelectedIds([]);\r\n      setColorArray((prevState) => {\r\n        prevState[id] = 1;\r\n        return prevState;\r\n      });\r\n    } else {\r\n      setSelectedIds((prevState) => {\r\n        return [...prevState, id];\r\n      });\r\n      setColorArray((prevState) => {\r\n        prevState[id] = 2;\r\n        return prevState;\r\n      });\r\n    }\r\n  };\r\n\r\n  const displayArr = [];\r\n  for (let i = 0; i < props.array.length; i++) {\r\n    if (colorArr[i] === 3) {\r\n      displayArr.push(<Green key={i}>{props.array[i]}</Green>);\r\n    } else {\r\n      displayArr.push(\r\n        <Block\r\n          key={i}\r\n          id={i}\r\n          color={colorArr[i]}\r\n          selectDiv={selectDiv}\r\n          selectedIds={selectedIds}\r\n          array={props.array}\r\n        >\r\n          {props.array[i]}\r\n        </Block>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.display}>\r\n      <div className={classes.content}>{displayArr}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n","import Display from './components/Display/Display';\n\nfunction App() {\n  const shuffle = (array) => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n  };\n\n  const arr = [];\n    for (let i = 1; i <= 8; i++) {\n      arr.push(i);\n      arr.push(i);\n    }\n  shuffle(arr);\n\n\n  return (\n    <div>\n      <Display array={arr}/>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Block_container__3mnTP\",\"displayDiv\":\"Block_displayDiv__1fJuy\",\"shakeDisplayDiv\":\"Block_shakeDisplayDiv__SoYBW\",\"shake\":\"Block_shake__XqOu6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Green_container__kX_hu\",\"displayDiv\":\"Green_displayDiv__1cTI_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"display\":\"Display_display__-XPd-\",\"content\":\"Display_content__3mfqN\"};"],"sourceRoot":""}