{"version":3,"sources":["components/Success/Modal.module.css","components/block/Block.module.css","components/Display/Display.module.css","components/Completed/Completed.module.css","components/block/Block.js","components/Completed/Completed.js","components/Success/Success.js","components/Display/Display.js","iconsArray/IconArray.js","App.js","index.js"],"names":["module","exports","Block","props","useState","backColor","setBackColor","isFlipped","setIsflipped","color","divClassName","classes","backDiv","selectedIds","length","array","shakeDisplayDiv","onClick","selectDiv","id","className","container","flipDirection","frontDiv","children","Green","useEffect","setTimeout","displayDiv","style","background","Backdrop","backdrop","onClose","ModalOverlay","useRef","lottie","loadAnimation","current","renderer","loop","autoplay","animationData","require","modal","successLogo","ref","content","btnDiv","btn","restart","portalElement","document","getElementById","Modal","ReactDom","createPortal","Display","arr","i","push","colorArr","setColorArray","setSelectedIds","noOfMoves","setNoOfMoves","gameOver","setGameOver","value","prevState","displayArr","icon","restartGameHandler","val","console","log","j","Math","floor","random","temp","shuffle","GameOver","display","Success","IconArray","iconArray","App","ReactDOM","render"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,SAAW,wBAAwB,MAAQ,qBAAqB,aAAa,0BAA0B,QAAU,uBAAuB,YAAc,2BAA2B,OAAS,sBAAsB,IAAM,mBAAmB,WAAa,4B,kBCAxQD,EAAOC,QAAU,CAAC,UAAY,yBAAyB,SAAW,wBAAwB,QAAU,uBAAuB,gBAAkB,+BAA+B,MAAQ,uB,gBCApLD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,QAAU,yBAAyB,OAAS,wBAAwB,IAAM,uB,kBCA/HD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,WAAa,gC,0h7DCiDzDC,EA9CD,SAACC,GACb,MAAkCC,mBAAS,SAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAEoB,IAAhBL,EAAMM,OAA6B,UAAdJ,GACvBC,EAAa,SAEK,IAAhBH,EAAMM,OAA6B,YAAdJ,GACvBC,EAAa,WAGK,IAAhBH,EAAMM,QAA6B,IAAdF,GACvBC,GAAa,GAEK,IAAhBL,EAAMM,QAA6B,IAAdF,GACvBC,GAAa,GAEf,IAAIE,EAAcC,IAAQC,QACO,IAA7BT,EAAMU,YAAYC,QAAgC,IAAhBX,EAAMM,OAExCN,EAAMY,MAAMZ,EAAMU,YAAY,MAAQV,EAAMY,MAAMZ,EAAMU,YAAY,MAEpEH,EAAeC,IAAQK,iBAS3B,OACE,qBAAKC,QANkB,WACvBd,EAAMe,UAAUf,EAAMgB,KAKUC,UAAWT,IAAQU,UAAnD,SACE,eAAC,IAAD,CAAed,UAAWA,EAAWe,cAAc,aAAnD,UACE,qBACEF,UAAWT,IAAQY,WAErB,qBAAKH,UAAWV,EAAhB,SAEGP,EAAMqB,iB,iBCtBFC,EAjBD,SAACtB,GACX,MAAmCC,oBAAS,GAA5C,mBAAOG,EAAP,KAAkBC,EAAlB,KAMF,OALEkB,qBAAU,WACNC,YAAW,WACPnB,GAAa,KACf,OACJ,IAEF,qBAAKY,UAAWT,IAAQU,UAAxB,SACE,eAAC,IAAD,CAAed,UAAWA,EAAWe,cAAc,aAAnD,UACA,qBAAKF,UAAWT,IAAQiB,WAAYC,MAAO,CAAEC,WAAY,WAAzD,SAAuE3B,EAAMqB,WAC3E,qBAAKJ,UAAWT,IAAQiB,WAAYC,MAAO,CAAEC,WAAY,WAAzD,SAAuE3B,EAAMqB,iB,iDCV/EO,EAAW,SAAC5B,GAChB,OAAO,qBAAKiB,UAAWT,IAAQqB,SAAUf,QAASd,EAAM8B,WAGpDC,EAAe,SAAC/B,GACpB,IAAMkB,EAAYc,iBAAO,MACzBT,qBAAU,WACRU,IAAOC,cAAc,CACnBhB,UAAWA,EAAUiB,QACrBC,SAAU,MACVC,MAAM,EACNC,UAAU,EACVC,cAAeC,EAAQ,QAExB,IAKH,OACE,sBAAKvB,UAAWT,IAAQiC,MAAxB,UACE,qBAAKxB,UAAWT,IAAQkC,YAAxB,SAAqC,qBAAKzB,UAAU,YAAY0B,IAAKzB,MACrE,qBAAKD,UAAWT,IAAQoC,QAAxB,SAAkC5C,EAAMqB,WACxC,qBAAKJ,UAAWT,IAAQqC,OAAxB,SACE,wBAAQ5B,UAAWT,IAAQsC,IAAKhC,QATlB,WAClBd,EAAM+C,QAAQ,OAQV,2BAOFC,EAAgBC,SAASC,eAAe,YAiB/BC,EAfD,SAACnD,GACb,OACE,eAAC,WAAD,WACGoD,IAASC,aACR,cAAC,EAAD,CAAUvB,QAAS9B,EAAM8B,UACzBkB,GAEDI,IAASC,aACR,cAAC,EAAD,CAAcN,QAAS/C,EAAM+C,QAA7B,SAAuC/C,EAAMqB,WAC7C2B,OCqGOM,EA9IC,SAACtD,GACf,MAAkCC,oBAAS,WAEzC,IADA,IAAMsD,EAAM,GACHC,EAAI,EAAGA,EAAIxD,EAAMY,MAAMD,OAAQ6C,IACtCD,EAAIE,KAAK,GAEX,OAAOF,KALT,mBAAOG,EAAP,KAAiBC,EAAjB,KAOA,EAAsC1D,mBAAS,IAA/C,mBAAOS,EAAP,KAAoBkD,EAApB,KACA,EAAkC3D,mBAAS,GAA3C,mBAAO4D,EAAP,KAAkBC,EAAlB,KACA,EAAgC7D,oBAAS,GAAzC,mBAAO8D,EAAP,KAAiBC,EAAjB,KAEAzC,qBAAU,WACmB,IAAvBb,EAAYC,SAEZX,EAAMY,MAAMF,EAAY,IAAIuD,QAAUjE,EAAMY,MAAMF,EAAY,IAAIuD,MAElEzC,YAAW,WACTmC,GAAc,SAACO,GAGb,OAFAA,EAAUxD,EAAY,IAAM,EAC5BwD,EAAUxD,EAAY,IAAM,EACrBwD,KAETN,EAAe,IACfE,GAAa,SAACI,GAAD,OAAeA,EAAY,OACvC,KAEH1C,YAAW,WACTmC,GAAc,SAACO,GAGb,OAFAA,EAAUxD,EAAY,IAAM,EAC5BwD,EAAUxD,EAAY,IAAM,EACrBwD,KAETN,EAAe,IACfE,GAAa,SAACI,GAAD,OAAeA,EAAY,OACvC,SAGN,CAACxD,EAAagD,EAAU1D,EAAMY,QAkCjC,IAhCA,IAAMG,EAAY,SAACC,GACjB,GAA2B,IAAvBN,EAAYC,OAGhB,OAA2B,IAAvBD,EAAYC,QACdiD,GAAe,SAACM,GACd,MAAO,CAAClD,WAEV2C,GAAc,SAACO,GAEb,OADAA,EAAUlD,GAAM,EACTkD,WAIPxD,EAAY,KAAOM,GACrB4C,EAAe,IACfD,GAAc,SAACO,GAEb,OADAA,EAAUlD,GAAM,EACTkD,OAGTN,GAAe,SAACM,GACd,MAAM,GAAN,mBAAWA,GAAX,CAAsBlD,OAExB2C,GAAc,SAACO,GAEb,OADAA,EAAUlD,GAAM,EACTkD,QAKPC,EAAa,GACVX,EAAI,EAAGA,EAAIxD,EAAMY,MAAMD,OAAQ6C,IAClB,IAAhBE,EAASF,GACXW,EAAWV,KAAK,cAAC,EAAD,UAAgBzD,EAAMY,MAAM4C,GAAGY,MAAnBZ,IAE5BW,EAAWV,KACT,cAAC,EAAD,CAEEzC,GAAIwC,EACJlD,MAAOoD,EAASF,GAChBzC,UAAWA,EACXL,YAAaA,EACbE,MAAOZ,EAAMY,MANf,SAQGZ,EAAMY,MAAM4C,GAAGY,MAPXZ,IAqCb,IAxBA,IAAMa,EAAqB,SAACC,GAC1BC,QAAQC,IAAIF,GACZN,GAAY,GACZL,GAAc,WAEZ,IADA,IAAMJ,EAAM,GACHC,EAAI,EAAGA,EAAIxD,EAAMY,MAAMD,OAAQ6C,IACtCD,EAAIE,KAAK,GAEX,OAAOF,KAETK,EAAe,IACfE,EAAa,IACG,SAAClD,GACf,IAAK,IAAI4C,EAAI5C,EAAMD,OAAS,EAAG6C,EAAI,EAAGA,IAAK,CACzC,IAAMiB,EAAIC,KAAKC,MAAMD,KAAKE,UAAYpB,EAAI,IACpCqB,EAAOjE,EAAM4C,GACnB5C,EAAM4C,GAAK5C,EAAM6D,GACjB7D,EAAM6D,GAAKI,GAGfC,CAAQ9E,EAAMY,QAGZmE,GAAW,EACNvB,EAAI,EAAGA,EAAIxD,EAAMY,MAAMD,OAAQ6C,IACtC,GAAoB,IAAhBE,EAASF,IAA4B,IAAhBE,EAASF,GAAU,CAC1CuB,GAAW,EACX,MASJ,OANIA,IAAyB,IAAbhB,GACdvC,YAAW,WACTwC,GAAY,KACX,KAIH,sBAAK/C,UAAWT,IAAQwE,QAAxB,UACGjB,GACC,eAACkB,EAAD,CAASlC,QAASsB,EAAlB,4CACkCR,EADlC,SACmD,OAGrD,sBAAK5C,UAAWT,IAAQqC,OAAxB,UACE,2CAAcgB,KACd,wBAAQ5C,UAAWT,IAAQsC,IAAKhC,QAASuD,EAAzC,wBACF,qBAAKpD,UAAWT,IAAQoC,QAAxB,SAAkCuB,QCxEzBe,EAvEG,WAChB,IAAMC,EAAY,GAmElB,OAjEAA,EAAU1B,KAAK,CACbW,KAAM,mBAAGnD,UAAU,eACnBgD,MAAO,IAETkB,EAAU1B,KAAK,CACbW,KAAM,mBAAGnD,UAAU,eACnBgD,MAAO,IAGTkB,EAAU1B,KAAK,CACbW,KAAM,mBAAGnD,UAAU,gBACnBgD,MAAO,IAETkB,EAAU1B,KAAK,CACbW,KAAM,mBAAGnD,UAAU,gBACnBgD,MAAO,IAETkB,EAAU1B,KAAK,CACbW,KAAM,mBAAGnD,UAAU,eACnBgD,MAAO,IAETkB,EAAU1B,KAAK,CACbW,KAAM,mBAAGnD,UAAU,eACnBgD,MAAO,IAETkB,EAAU1B,KAAK,CACbW,KAAM,mBAAGnD,UAAU,iBACnBgD,MAAO,IAETkB,EAAU1B,KAAK,CACbW,KAAM,mBAAGnD,UAAU,iBACnBgD,MAAO,IAETkB,EAAU1B,KAAK,CACbW,KAAM,mBAAGnD,UAAU,kBACnBgD,MAAO,IAETkB,EAAU1B,KAAK,CACbW,KAAM,mBAAGnD,UAAU,kBACnBgD,MAAO,IAETkB,EAAU1B,KAAK,CACbW,KAAM,mBAAGnD,UAAU,gBACnBgD,MAAO,IAETkB,EAAU1B,KAAK,CACbW,KAAM,mBAAGnD,UAAU,gBACnBgD,MAAO,IAETkB,EAAU1B,KAAK,CACbW,KAAM,mBAAGnD,UAAU,gBACnBgD,MAAO,IAETkB,EAAU1B,KAAK,CACbW,KAAM,mBAAGnD,UAAU,gBACnBgD,MAAO,IAETkB,EAAU1B,KAAK,CACbW,KAAM,mBAAGnD,UAAU,qBACnBgD,MAAO,IAETkB,EAAU1B,KAAK,CACbW,KAAM,mBAAGnD,UAAU,qBACnBgD,MAAO,IAEFkB,GC5CMC,MArBf,WACE,IASM7B,EAAM2B,IAIZ,OAbgB,SAACtE,GACf,IAAK,IAAI4C,EAAI5C,EAAMD,OAAS,EAAG6C,EAAI,EAAGA,IAAK,CACzC,IAAMiB,EAAIC,KAAKC,MAAMD,KAAKE,UAAYpB,EAAI,IACpCqB,EAAOjE,EAAM4C,GACnB5C,EAAM4C,GAAK5C,EAAM6D,GACjB7D,EAAM6D,GAAKI,GAKfC,CAAQvB,GAIN,8BACE,cAAC,EAAD,CAAS3C,MAAO2C,OCdtB8B,IAASC,OAAO,cAAC,EAAD,IAASrC,SAASC,eAAe,W","file":"static/js/main.e274b22f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__1JPCm\",\"modal\":\"Modal_modal__2TL3i\",\"slide-down\":\"Modal_slide-down__1W75g\",\"content\":\"Modal_content__2ChEE\",\"successLogo\":\"Modal_successLogo__KQc_f\",\"btnDiv\":\"Modal_btnDiv__3xWiR\",\"btn\":\"Modal_btn__3jhPU\",\"bn53bounce\":\"Modal_bn53bounce__1mBcZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Block_container__3mnTP\",\"frontDiv\":\"Block_frontDiv__3tssE\",\"backDiv\":\"Block_backDiv__5lNCm\",\"shakeDisplayDiv\":\"Block_shakeDisplayDiv__SoYBW\",\"shake\":\"Block_shake__XqOu6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"display\":\"Display_display__-XPd-\",\"content\":\"Display_content__3mfqN\",\"btnDiv\":\"Display_btnDiv__3Ahdt\",\"btn\":\"Display_btn__o7-YA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Completed_container__2p3Ks\",\"displayDiv\":\"Completed_displayDiv__3fOl7\"};","import { useState } from \"react\";\r\nimport ReactCardFlip from \"react-card-flip\";\r\nimport classes from \"./Block.module.css\";\r\n\r\nconst Block = (props) => {\r\n  const [backColor, setBackColor] = useState(\"white\");\r\n  const [isFlipped, setIsflipped] = useState(false);\r\n  \r\n  if (props.color === 1 && backColor !== \"white\") {\r\n    setBackColor(\"white\");\r\n  }\r\n  if (props.color === 2 && backColor !== \"#87CEEB\") {\r\n    setBackColor(\"#87CEEB\");\r\n  }\r\n\r\n  if (props.color === 1 && isFlipped !== false) {\r\n    setIsflipped(false);\r\n  }\r\n  if (props.color === 2 && isFlipped !== true) {\r\n    setIsflipped(true);\r\n  }\r\n  let divClassName= classes.backDiv;\r\n  if (props.selectedIds.length === 2 && props.color === 2) {\r\n    if (\r\n      props.array[props.selectedIds[0]] !== props.array[props.selectedIds[1]]\r\n    ) {\r\n      divClassName = classes.shakeDisplayDiv;\r\n    }\r\n  }\r\n  \r\n  const selectDivHandler = () => {\r\n    props.selectDiv(props.id);\r\n  };\r\n\r\n\r\n  return (\r\n    <div onClick={selectDivHandler} className={classes.container}>\r\n      <ReactCardFlip isFlipped={isFlipped} flipDirection=\"horizontal\">\r\n        <div\r\n          className={classes.frontDiv}\r\n        ></div>\r\n        <div className={divClassName} \r\n          >\r\n          {props.children}\r\n        </div>\r\n      </ReactCardFlip>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Block;\r\n","import classes from \"./Completed.module.css\";\r\nimport ReactCardFlip from \"react-card-flip\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst Green = (props) => {\r\n    const [isFlipped, setIsflipped] =  useState(false);\r\n    useEffect(()=>{\r\n        setTimeout(()=>{\r\n            setIsflipped(true);\r\n        },200)\r\n    },[])\r\n  return (\r\n    <div className={classes.container} >\r\n      <ReactCardFlip isFlipped={isFlipped} flipDirection=\"horizontal\">\r\n      <div className={classes.displayDiv} style={{ background: \"#87CEEB\" }}>{props.children}</div>\r\n        <div className={classes.displayDiv} style={{ background: \"#e73060\" }}>{props.children}</div>\r\n      </ReactCardFlip>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Green;\r\n","import React, { useEffect, Fragment, useRef } from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport classes from \"./Modal.module.css\";\r\nimport lottie from \"lottie-web\";\r\n\r\nconst Backdrop = (props) => {\r\n  return <div className={classes.backdrop} onClick={props.onClose}></div>;\r\n};\r\n\r\nconst ModalOverlay = (props) => {\r\n  const container = useRef(null);\r\n  useEffect(() => {\r\n    lottie.loadAnimation({\r\n      container: container.current,\r\n      renderer: \"svg\",\r\n      loop: true,\r\n      autoplay: true,\r\n      animationData: require(\"./success.json\"),\r\n    });\r\n  }, []);\r\n  const restartGame = () => {\r\n    props.restart(\"hi\");\r\n  }\r\n\r\n  return (\r\n    <div className={classes.modal}>\r\n      <div className={classes.successLogo}><div className=\"container\" ref={container}></div></div>\r\n      <div className={classes.content}>{props.children}</div>\r\n      <div className={classes.btnDiv}>\r\n        <button className={classes.btn} onClick={restartGame}>restart</button>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst portalElement = document.getElementById(\"overlays\");\r\n\r\nconst Modal = (props) => {\r\n  return (\r\n    <Fragment>\r\n      {ReactDom.createPortal(\r\n        <Backdrop onClose={props.onClose} />,\r\n        portalElement\r\n      )}\r\n      {ReactDom.createPortal(\r\n        <ModalOverlay restart={props.restart}>{props.children}</ModalOverlay>,\r\n        portalElement\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { useEffect, useState } from \"react\";\r\nimport Block from \"../block/Block\";\r\nimport Green from \"../Completed/Completed\";\r\nimport classes from \"./Display.module.css\";\r\nimport Success from \"../Success/Success\";\r\n\r\nconst Display = (props) => {\r\n  const [colorArr, setColorArray] = useState(() => {\r\n    const arr = [];\r\n    for (let i = 0; i < props.array.length; i++) {\r\n      arr.push(1);\r\n    }\r\n    return arr;\r\n  });\r\n  const [selectedIds, setSelectedIds] = useState([]);\r\n  const [noOfMoves, setNoOfMoves] = useState(0);\r\n  const [gameOver, setGameOver] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (selectedIds.length === 2) {\r\n      if (\r\n        props.array[selectedIds[0]].value === props.array[selectedIds[1]].value\r\n      ) {\r\n        setTimeout(() => {\r\n          setColorArray((prevState) => {\r\n            prevState[selectedIds[0]] = 3;\r\n            prevState[selectedIds[1]] = 3;\r\n            return prevState;\r\n          });\r\n          setSelectedIds([]);\r\n          setNoOfMoves((prevState) => prevState + 1);\r\n        }, 500);\r\n      } else {\r\n        setTimeout(() => {\r\n          setColorArray((prevState) => {\r\n            prevState[selectedIds[0]] = 1;\r\n            prevState[selectedIds[1]] = 1;\r\n            return prevState;\r\n          });\r\n          setSelectedIds([]);\r\n          setNoOfMoves((prevState) => prevState + 1);\r\n        }, 1500);\r\n      }\r\n    }\r\n  }, [selectedIds, colorArr, props.array]);\r\n\r\n  const selectDiv = (id) => {\r\n    if (selectedIds.length === 2) {\r\n      return;\r\n    }\r\n    if (selectedIds.length === 0) {\r\n      setSelectedIds((prevState) => {\r\n        return [id];\r\n      });\r\n      setColorArray((prevState) => {\r\n        prevState[id] = 2;\r\n        return prevState;\r\n      });\r\n      return;\r\n    }\r\n    if (selectedIds[0] === id) {\r\n      setSelectedIds([]);\r\n      setColorArray((prevState) => {\r\n        prevState[id] = 1;\r\n        return prevState;\r\n      });\r\n    } else {\r\n      setSelectedIds((prevState) => {\r\n        return [...prevState, id];\r\n      });\r\n      setColorArray((prevState) => {\r\n        prevState[id] = 2;\r\n        return prevState;\r\n      });\r\n    }\r\n  };\r\n\r\n  const displayArr = [];\r\n  for (let i = 0; i < props.array.length; i++) {\r\n    if (colorArr[i] === 3) {\r\n      displayArr.push(<Green key={i}>{props.array[i].icon}</Green>);\r\n    } else {\r\n      displayArr.push(\r\n        <Block\r\n          key={i}\r\n          id={i}\r\n          color={colorArr[i]}\r\n          selectDiv={selectDiv}\r\n          selectedIds={selectedIds}\r\n          array={props.array}\r\n        >\r\n          {props.array[i].icon}\r\n        </Block>\r\n      );\r\n    }\r\n  }\r\n\r\n  const restartGameHandler = (val) => {\r\n    console.log(val)\r\n    setGameOver(false);\r\n    setColorArray(() => {\r\n      const arr = [];\r\n      for (let i = 0; i < props.array.length; i++) {\r\n        arr.push(1);\r\n      }\r\n      return arr;\r\n    });\r\n    setSelectedIds([]);\r\n    setNoOfMoves(0);\r\n    const shuffle = (array) => {\r\n      for (let i = array.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        const temp = array[i];\r\n        array[i] = array[j];\r\n        array[j] = temp;\r\n      }\r\n    };\r\n    shuffle(props.array);\r\n  };\r\n\r\n  let GameOver = true;\r\n  for (let i = 0; i < props.array.length; i++) {\r\n    if (colorArr[i] === 1 || colorArr[i] === 2) {\r\n      GameOver = false;\r\n      break;\r\n    }\r\n  }\r\n  if (GameOver && gameOver === false) {\r\n    setTimeout(() => {\r\n      setGameOver(true);\r\n    }, 1000);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.display}>\r\n      {gameOver && (\r\n        <Success restart={restartGameHandler}>\r\n          you have completed the game in {noOfMoves} moves{\" \"}\r\n        </Success>\r\n      )}\r\n      <div className={classes.btnDiv}>\r\n        <div>Moves : {noOfMoves}</div>\r\n        <button className={classes.btn} onClick={restartGameHandler}>restart</button></div>\r\n      <div className={classes.content}>{displayArr}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n","const IconArray = () => {\r\n  const iconArray = [];\r\n\r\n  iconArray.push({\r\n    icon: <i className=\"fas fa-cat\"></i>,\r\n    value: 1,\r\n  });\r\n  iconArray.push({\r\n    icon: <i className=\"fas fa-cat\"></i>,\r\n    value: 1,\r\n  });\r\n\r\n  iconArray.push({\r\n    icon: <i className=\"fas fa-crow\"></i>,\r\n    value: 2,\r\n  });\r\n  iconArray.push({\r\n    icon: <i className=\"fas fa-crow\"></i>,\r\n    value: 2,\r\n  });\r\n  iconArray.push({\r\n    icon: <i className=\"fas fa-dog\"></i>,\r\n    value: 3,\r\n  });\r\n  iconArray.push({\r\n    icon: <i className=\"fas fa-dog\"></i>,\r\n    value: 3,\r\n  });\r\n  iconArray.push({\r\n    icon: <i className=\"fas fa-horse\"></i>,\r\n    value: 4,\r\n  });\r\n  iconArray.push({\r\n    icon: <i className=\"fas fa-horse\"></i>,\r\n    value: 4,\r\n  });\r\n  iconArray.push({\r\n    icon: <i className=\"fas fa-spider\"></i>,\r\n    value: 5,\r\n  });\r\n  iconArray.push({\r\n    icon: <i className=\"fas fa-spider\"></i>,\r\n    value: 5,\r\n  });\r\n  iconArray.push({\r\n    icon: <i className=\"fas fa-fish\"></i>,\r\n    value: 6,\r\n  });\r\n  iconArray.push({\r\n    icon: <i className=\"fas fa-fish\"></i>,\r\n    value: 6,\r\n  });\r\n  iconArray.push({\r\n    icon: <i className=\"fas fa-dove\"></i>,\r\n    value: 7,\r\n  });\r\n  iconArray.push({\r\n    icon: <i className=\"fas fa-dove\"></i>,\r\n    value: 7,\r\n  });\r\n  iconArray.push({\r\n    icon: <i className=\"fas fa-kiwi-bird\"></i>,\r\n    value: 8,\r\n  });\r\n  iconArray.push({\r\n    icon: <i className=\"fas fa-kiwi-bird\"></i>,\r\n    value: 8,\r\n  });\r\n  return iconArray;\r\n};\r\n\r\nexport default IconArray;\r\n","import Display from './components/Display/Display';\nimport IconArray from './iconsArray/IconArray';\n\nfunction App() {\n  const shuffle = (array) => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n  };\n\n  const arr = IconArray();\n  shuffle(arr);\n\n\n  return (\n    <div>\n      <Display array={arr}/>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}